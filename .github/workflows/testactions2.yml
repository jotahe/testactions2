name: Action Workflow

#Specify trigger by type
on:
  repository_dispatch:
    types: [build] #Would only run when the event type on json is build
  #schedule:
  #  - cron: "0/27 * * * *" # Min Hours Day Month WeekDay 0/15 every fifteen
  push:
    branches:                    
      - master          # enable that push to master triggers the workflow
      - 'feature/*'     # enable all branchs that starts with feature/ to trigger the workflow
      - 'feature/**'    # this includes branch of type feature/a/branch
      - '!feature/b/no' # this would exclude this branch even if there is another which includes it
    # branches-ignore:  # you can use branches indicating them or excluding which one do you not want to run on
    #  - xbranch        # run the workflow in any branch except this one
    #tags:               # Restric build by tag information
    #  - v1.*            # you can use match patterns for versions  
    # tags-ignore:      # All tags except the ones filled}
    #    - v2*
    #paths:
    #  - '**.js'         # If there was a change in any .js file the workflow would run otherwise no
    #paths-ignore:
    #  - "**/something"  # prevent the workflow from running if this specific path was modified or so
  pull_request:
    types: [ closed, assigned, opened, reopened]
  
jobs:
  run-github-actions:
    runs-on: ubuntu-latest
    steps:
      - name: payload retrieve   # retrieve value from dispatch call payload
        run: echo ${{ github.event.client_payload.env }}
      - name: List Files
        run: |
          pwd
          ls -a
          echo "Printing environment variables"
          echo $GITHUB_HEAD_REF
          echo $GITHUB_SHA
          echo $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE
          echo "${{ github.token }}"          
      # git checkout $GITHUB_SHA
      # git clone git@github:$GITHUB_REPOSITORY
      # git clone https://<token>@github.com/owner/repo.git
      - name: Checkout
        uses: actions/checkout@v1
      - name: List Files After Checkout
        run: |
          pwd
          ls -a
      - name: Simple JS Action
        id: greet # create an id to reference for its output
        uses: actions/hello-world-javascript-action@v1 #you can also reference branch or commit_id
        with:
          who-to-greet: Jorge Herran
      - name: Log Greeting time
        run: echo "{{ steps.greet.outputs.time }}"
